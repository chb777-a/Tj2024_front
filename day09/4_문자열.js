






//[4] 문자열 (`백틱`)템플릿 - 탭tap 위 ``
console.log('유재석' + '강호동') //'문자A' + '문자B' => '문자A문자B'
console.log('유재석' + 40) //'문자A' + 숫자' => '문자A숫자'
console.log( '40' + '100') // '숫자1' + '숫자2' => '숫자1숫자2' (40100)
let age = 40;
console.log('유재석' + age) // '문자A' + 변수명 => '유재석40'
//console.log('유재석' + 40)
console.log(`유재석${age}강호동`) // '문자A${js코드 입력}문자B' => 유재석40강호동
console.log(`평균 : ${100 + 50}`) // 평균 : 150
// 방법 1 : `문자그자체 문자그자체 문자그자체${JS코드} 문자그자체`
// 방법2 :  '문자그자체 문자그자체 문자그자체`+ JS코드 +'문자그자체'
// JS 학습 목적 : HTML 조작/제어/이벤트 하기 위해서
// HTML는 변수 , 연산 , 배열 , 타입 기능 X -->JS에서 HTML 작성시 JS 코드와 합쳐서 작성할 수 있다.
let 직원명1 ='신동엽'
let 직원명2 ='강호동'
let nameHTML = `<ol> <li> ${직원명1} </li> <li> ${직원명2} </li> </ol>` //백틱 사용
document.write(nameHTML) //document.write() : 현재 HTML에 출력하는 함수

//예1: 입력받은 데이터를 HTML에 출력하시오.
//prompt('알람 메시지'), 반환값 : 입력받은 값 1개
let 결과2 = prompt('[알람내용] 데이터를 입력해주세요')
// promt 함수로부터 입력받은 값을 아래 코드에서 재사용하고 싶다.
console.log( 결과2)
let inputHTML = `<h3> 입력받은 데이터 : ${결과2} </h3>` // ` 백틱 `
document.write(inputHTML)

//예시 -----
let 결과1 = 10 + 5
// 10 + 5 한 결과의 15를 아래 코드에서 재사용(연산 결과 저장하는 변수) 하고싶다.
console.log(결과1)

//예2: 2명의 사원 이름 입력받아서 HTML(table- 표)형식으로 출력하시오.
// 이유 : HTML은 연산X , 저장X 등등 기능이 없으므로 텍스트 그 자체
// 새로운 값/데이터를 입력받아서 데이터 가공(JS) 하기 위해서 JS를 사용
// 순서도(알고리즘) , 어떠한 작업의 순서/절차
    //1. 1명의 사원이름을 입력받는다.               prompt() , 반환값 : 입력받은 값
    //2. 입력받은 사원이름을 변수에 저장한다.           let 사원 1 = prompt()
    //3. 1명의 사원이름을 입력받는다.               prompt() , 반환값 : 입력받은 값
    //4. 입력받은 사원이름을 변수에 저장한다.           let 사원 1 = prompt()
    //5.HTML형식의 문자로 출력할 변수와 같이 구성한다.  let tableHTML = `<table> ~ </table>`
    //6. 구성된 HTML형식의 문자를 HTML문서에 출력한다.  document.write() , 반환값 : X
    //- 변수를 사용하는 이유 : 다음 코드에서 사용(출력 목적) 하려고
/* 
    번호 이름
    1.   유재석
    2.   강호동
*/

let name1 = prompt('이름을 입력해주세요.')
let name2 = prompt('이름을 입력해주세요.')
let HTML1 = `<table> 
                    <tr> <th> 번호 </th> <th> 사원명 </th> </tr>
                    <tr> <td> 1 </td> <td> ${name1} </td> </tr>
                    <tr> <td> 2 </td> <td> ${name2} </td> </tr>
                </table> `
document.write(HTML1)

// 같은 창에서 변수명 겹치면 출력 불가능 ***변수명 다르게 설정***