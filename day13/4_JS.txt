1. 조건 충족할 때 특정범위 내 코드를 반복 실행

2.형태
    for(초기값; 조건문; 증감식){ 실행문; }

    1.초기값 : 반복을 할 때 반복의 카운터하는 변수의 처음값
    2.조건문 : 반복실행문이 실행되는 조건으로 true 이면 {실행문} false이면 for 종료
    3.증감식 : 반복변수의 증가 혹은 감소 변화 연산식
    4.실행문 : 조건문이 true  일 때 실행할 코드를

3.배열과 반복문 관계
    1. 배열은 인덱스가 0부터 마지막 인덱스까지 1씩 증가
    2. 배열의 길이 = 배열명.length, 마지막인덱스 = 배열명.length -1
    3. 배열 순회 : 배열내 모든 요소를 하나씩 호출하는 작업
        for( let index = 0; index <= 배열명.length -1; index++){
            배열명[index];
        }

4. for 중첩
    for(){
        for2(){
        }
    }

5.키워드
    1.continue : 가장 가가운 for문의 증감식으로 코드흐름 이동한다.
    2.break : 가장 가까운 for문의 {} 종료/탈출한다.

6.무한루프
    for(; ;){}
    

[함수]
    1. 미리 명령어(코드)들을 정의하는 구조
    2. 함수 사용 종류
        1.라이브러리 : 내가 아닌 다른 사람이 만든 함수들, console.log() , document.querySelector() 등등
        2. 정의함수 : 내가 만든 함수들, 
    3. JS 함수 종류
        1. 선언적함수 : function 함수명(){}
        2. 익명함수 : function(){} , let 변수 = function(){}
        3. "화살표(람다) 함수 :  ( ) -> {} , let = 변수 () => {}

    4. 선언적 함수 만드는 방법
        1.function : 함수를 만들기 위한 함수 선언 키워드
        2.함수명 : 관례적으로 카멜표기법 (mycar => myCar)
        3.(매개변수1 , 매개변수2) : 매개 변수 , 함수 호출시 인자값을 매개변수에 대입받는 변수
        4.{} : 함수 호출/실행 시 실행되는 코드들
        5.return : 함수가 종료되면서 호출했던 곳으로 반환 값 , 무조건 1개 자료

    5. 함수 호출하는 방법
        1. js에서 호출하는 방법 : 함수명(인자값1 , 인지값2) , let 리턴값 = 함수명 (인자값1, 인자값2)
        2. html에서 호출하는 방법 : < 마크업 onclick="함수명(인자값1)" >
    
    6. 함수 사용 특징
        1. 코드(명령어) 재 활용/사용 , 동일한 코드를 여러번 사용시 효율성이 좋다.
        2. 미리 정의된 코드의 인자값(매개변수)에 따른 서로 다른 결과(리턴값) 얻을 수 있다.
        3. 지역변수 : 함수내 선언된 변수는 함수가 실행 도중에만 메모리 할당되고 함수가 종료되면 지역변수 초기화 (리턴값)
        
    7. html 마크업 이벤트 속성
        - <마크업 onXXXX="js코드"/>
        1. onclick : 마크업을 클릭했을 때 실행되는 js코드

    