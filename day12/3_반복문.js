//[1]for 중첩
    //i는 3번 반복을 하고 j는 5번을 반복한다. => 총 i의 출력 횟수는 3 / 총 j의 출력 횟수는 i 한 번에 5번 (총 15번)
    // 즉 상위 for문이 1회전 할때마다 하위 for 문은 전체 회전한다.

for(let i = 1; i <= 3; i++){// i는 1부터 3이하까지 1씩 증가한다.
    console.log(i);
    for(let j = 1; j <= 5; j++){// j는 1부터 5이하까지 1씩 증가한다.
        console.log(`--->${j}`);
        }
}

//[2] 구구단 2~9단 만들기
// 곱하기 패턴 : 1부터9까지 1씩 증가
for (let w = 1; w <= 9; w++){
    console.log(`2 X ${w} = ${2*w}`)
}
// 단 패턴 : 2부터 9까지 1씩 증가
for(let q = 2; q <= 9; q++){
    console.log(`${q} X 1 = ${q*1}`)
}
//(1) 곱마다 단 실행, (2) 단마다 곱 실행 -->단 (상위) 곱 (하위)
// 단 1번마다 곱은 전체 실행
for(let q = 2; q <= 9; q++){
    for (let w = 1; w <= 9; w++){
        console.log(`${q} X ${w} = ${q * w}`)
    }
}

//[3] 별 모양 출력하기, 입력받은 줄 수 만큼
//예) 5 입력 했을 경우 아래와 같이 5줄의 직각삼각형 출력
// 줄바꿈 : \n (이스케이프, 제어문자)
/*
            줄      별
*           1       1       1부터 1까지
**          2       12      1부터 2까지
***         3       123     1부터 3까지
****        4       1234    1부터 4까지
*****       5       12345   1부터 5까지
줄 패턴 : 1부터 5까지 1씩 증가 반복, 줄바꿈 \n
별 패턴 : 1부터 현재줄수까지 1식 증가 반복
*/
let 줄개수 = Number(prompt('줄수:')) // 출력할 줄의 개수
let out = ''; // 출력할 데이터를 모아두는 변수
for (let line = 1; line <= 줄개수; line++){
    //별 출력
    for(let star = 1; star <= line; star++){
        out += '*' // vs out = out +'*', 누적합계 : 기존데이터와 연산
    }
    out += '\n'
}
console.log(out)